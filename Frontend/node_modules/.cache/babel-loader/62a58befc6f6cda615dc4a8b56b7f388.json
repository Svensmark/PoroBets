{"ast":null,"code":"const URL = \"http://192.168.0.103:8080/securitystarter/api/\";\n\nfunction handleHttpErrors(res) {\n  if (!res.ok) {\n    return Promise.reject({\n      status: res.status,\n      fullError: res.json()\n    });\n  }\n\n  return res.json();\n}\n\nfunction ApiFacade() {\n  //Insert utility-methods from a latter step (d) here\n  const setToken = token => {\n    localStorage.setItem('jwtToken', token);\n  };\n\n  const getToken = () => {\n    return localStorage.getItem('jwtToken');\n  };\n\n  const loggedIn = () => {\n    const loggedIn = getToken() != null;\n    return loggedIn;\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"jwtToken\");\n  };\n\n  const makeOptions = (method, addToken, body) => {\n    var opts = {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        'Accept': 'application/json'\n      }\n    };\n\n    if (addToken && loggedIn()) {\n      opts.headers[\"x-access-token\"] = getToken();\n    }\n\n    if (body) {\n      opts.body = JSON.stringify(body);\n    }\n\n    return opts;\n  }; //User\n\n\n  const login = (user, pass) => {\n    const options = makeOptions(\"POST\", true, {\n      username: user,\n      password: pass\n    });\n    return fetch(URL + \"login\", options).then(handleHttpErrors).then(res => {\n      setToken(res.token);\n    });\n  };\n\n  const create = (user, pass) => {\n    const options = makeOptions(\"POST\", true, {\n      username: user,\n      password: pass\n    });\n    return fetch(URL + \"login/create\", options).then(handleHttpErrors).then(res => {\n      setToken(res.token);\n    });\n  };\n\n  const fetchUser = () => {\n    const options = makeOptions(\"GET\", true); //True add's the token\n\n    return fetch(URL + \"user\", options).then(handleHttpErrors);\n  };\n\n  const fetchUpcoming = () => {\n    return fetch(URL + \"gamematch/upcoming\", makeOptions(\"GET\")).then(handleHttpErrors);\n  };\n\n  const fetchTeamByAcronym = acronym => {\n    return fetch(URL + \"team/acronym/\" + acronym, makeOptions(\"GET\")).then(handleHttpErrors);\n  };\n\n  return {\n    login,\n    logout,\n    fetchUser,\n    create,\n    fetchUpcoming\n  };\n}\n\n_c = ApiFacade;\nexport default ApiFacade();\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiFacade\");","map":{"version":3,"sources":["C:/Users/Emil Svensmark/Desktop/Privat/React-app-1/Frontend/src/login/ApiFacade.js"],"names":["URL","handleHttpErrors","res","ok","Promise","reject","status","fullError","json","ApiFacade","setToken","token","localStorage","setItem","getToken","getItem","loggedIn","logout","removeItem","makeOptions","method","addToken","body","opts","headers","JSON","stringify","login","user","pass","options","username","password","fetch","then","create","fetchUser","fetchUpcoming","fetchTeamByAcronym","acronym"],"mappings":"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","sourcesContent":["const URL = \"http://192.168.0.103:8080/securitystarter/api/\";\r\n\r\nfunction handleHttpErrors(res) {\r\n    if (!res.ok) {\r\n        return Promise.reject({ status: res.status, fullError: res.json() })\r\n    }\r\n    return res.json();\r\n}\r\n\r\nfunction ApiFacade() {\r\n    //Insert utility-methods from a latter step (d) here\r\n    const setToken = (token) => {\r\n        localStorage.setItem('jwtToken', token)\r\n    }\r\n    const getToken = () => {\r\n        return localStorage.getItem('jwtToken')\r\n    }\r\n    const loggedIn = () => {\r\n        const loggedIn = getToken() != null;\r\n        return loggedIn;\r\n    }\r\n    const logout = () => {\r\n        localStorage.removeItem(\"jwtToken\");\r\n    }\r\n\r\n    const makeOptions = (method, addToken, body) => {\r\n        var opts = {\r\n            method: method,\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                'Accept': 'application/json',\r\n            }\r\n        }\r\n        if (addToken && loggedIn()) {\r\n            opts.headers[\"x-access-token\"] = getToken();\r\n        }\r\n        if (body) {\r\n            opts.body = JSON.stringify(body);\r\n        }\r\n        return opts;\r\n    }\r\n\r\n    //User\r\n    const login = (user, pass) => {\r\n        const options = makeOptions(\"POST\", true,\r\n            {\r\n                username: user,\r\n                password: pass\r\n            });\r\n        return fetch(URL + \"login\", options)\r\n            .then(handleHttpErrors)\r\n            .then(res => { setToken(res.token) })\r\n    }\r\n    const create = (user, pass) => {\r\n        const options = makeOptions(\"POST\", true,\r\n            {\r\n                username: user,\r\n                password: pass\r\n            });\r\n        return fetch(URL + \"login/create\", options)\r\n            .then(handleHttpErrors)\r\n            .then(res => { setToken(res.token) })\r\n    }\r\n\r\n\r\n    const fetchUser = () => {\r\n        const options = makeOptions(\"GET\", true); //True add's the token\r\n        return fetch(URL + \"user\", options).then(handleHttpErrors);\r\n    }\r\n\r\n    const fetchUpcoming = () => {\r\n        return fetch(URL + \"gamematch/upcoming\", makeOptions(\"GET\")).then(handleHttpErrors);\r\n    }\r\n\r\n    const fetchTeamByAcronym = (acronym) => {\r\n        return fetch(URL + \"team/acronym/\" + acronym, makeOptions(\"GET\")).then(handleHttpErrors);\r\n    }\r\n\r\n    return {\r\n        login,\r\n        logout,\r\n        fetchUser,\r\n        create,\r\n        fetchUpcoming\r\n    }\r\n\r\n}\r\n\r\nexport default ApiFacade();"]},"metadata":{},"sourceType":"module"}